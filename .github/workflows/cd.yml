name: CD

on:
  push:
    branches: [main]
    tags: ['v*']

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE: trkv-web

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_TWITCH_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TWITCH_CLIENT_ID }}
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.CREDENTIALS_JSON }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/$PROJECT_ID/$SERVICE:${{ github.sha }} .
          docker push gcr.io/$PROJECT_ID/$SERVICE:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy $SERVICE \
            --region $REGION \
            --image gcr.io/$PROJECT_ID/$SERVICE:${{ github.sha }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "NEXT_PUBLIC_TWITCH_CLIENT_ID=${{ secrets.NEXT_PUBLIC_TWITCH_CLIENT_ID }}" \
            --set-env-vars "TWITCH_CLIENT_SECRET=${{ secrets.TWITCH_CLIENT_SECRET }}" \
            --set-env-vars "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" \
            --set-env-vars "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" \
            --set-env-vars "CRON_SECRET=${{ secrets.CRON_SECRET }}"

      - name: Show Output URL
        run: |
          echo "Service URL: $(gcloud run services describe $SERVICE --region $REGION --format 'value(status.url)')"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify Success
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          curl -X POST ${{ secrets.DISCORD_WEBHOOK_URL }} \
          -H "Content-Type: application/json" \
          -d '{
            "content": "✅ Deployment successful! Version: ${{ github.sha }}"
          }'

      - name: Notify Failure
        if: ${{ needs.deploy.result == 'failure' }}
        run: |
          curl -X POST ${{ secrets.DISCORD_WEBHOOK_URL }} \
          -H "Content-Type: application/json" \
          -d '{
            "content": "❌ Deployment failed! Version: ${{ github.sha }}"
          }' 